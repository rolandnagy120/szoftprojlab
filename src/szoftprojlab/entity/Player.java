package szoftprojlab.entity;

//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : Untitled
//  @ File Name : Player.java
//  @ Date : 02/03/2021
//  @ Author : 
//
//


import szoftprojlab.Game;
import szoftprojlab.TeleportGate;
import szoftprojlab.Timer;
import szoftprojlab.resource.Resource;

import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class Player extends Entity {
	private List<TeleportGate> gates = new ArrayList<>();
	private List<Resource> inventory = new ArrayList<>();

	public Player() {
	}

	@Override
	public List<Resource> GetInventory() {
		return inventory;
	}

	public void Step() {
	}

	public void Mine() {
		System.out.println("Player.Mine()");

		asteroid.Mine(this);

		System.out.println("return from Player.Mine()");
	}

	public void PlaceResource(Resource resource) {
		System.out.println("Player.PlaceResource()");

		if (inventory.contains(resource))
			asteroid.Place(resource);

		System.out.println("return from Player.PlaceResource()");
	}

	public void PlaceGate() {
		System.out.println("Player.PlaceGate()");

		if (asteroid != null && gates.size() > 0) {
			asteroid.PlaceTeleportGate(gates.get(0));
			gates.remove(0);
		}
		System.out.println("return from Player.PlaceGate()");
	}

	public void MakeGates() {
		System.out.println("Player.MakeGates()");

		System.out.print("Does the player have enough resources to create the gates? (Y|N) ");
		Scanner scanner = new Scanner(System.in);
		String input = scanner.next();

		if (input.equalsIgnoreCase("Y")) {
			TeleportGate tg1 = new TeleportGate(1);
			TeleportGate tg2 = new TeleportGate(2);
			tg1.SetPair(tg2);
			gates.add(tg1);
			gates.add(tg2);
		}

		System.out.println("return from Player.MakeGates()");
	}

	public void MakeAndPlaceRobot() {
		System.out.println("Player.MakeAndPlaceRobot()");

		System.out.print("Does the player have enough resources to create the robot? (Y|N) ");
		Scanner scanner = new Scanner(System.in);
		String input = scanner.next();

		if (input.equalsIgnoreCase("Y")) {
			Robot r = new Robot();
			asteroid.Accept(r);
		}
		System.out.println("return from Player.MakeAndPlaceRobot()");
	}

	public List<TeleportGate> GetTeleportGates() {
		return gates;
	}

	public void AddResource(Resource resource) {
		System.out.println("Player.AddResource()");
		inventory.add(resource);
		System.out.println("return from Player.AddResource()");
	}

	@Override
	public void Explode() {
		Game game = Game.getInstance();
		asteroid.Remove(this);
		game.PlayerDie(this);
	}

	@Override
	public void SunStorm() {
		Timer timer = new Timer();
		timer.RemoveSteppable(this);
		asteroid.Remove(this);
		Game.getInstance().PlayerDie(this);
	}
}
