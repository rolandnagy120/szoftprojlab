package szoftprojlab;

//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : Untitled
//  @ File Name : Game.java
//  @ Date : 02/03/2021
//  @ Author : 
//
//


import szoftprojlab.entity.Player;
import szoftprojlab.resource.*;
import szoftprojlab.skeleton.ObjectHolder;

import java.util.List;
import java.util.Scanner;

public class Game {
    private static Game singleClassInstance = null;

    private Sun sun;
    private List<Player> players;
    private static Blueprint baseBluebrint = new Blueprint(
            new Iron(), new Iron(), new Iron(),
            new Coal(), new Coal(), new Coal(),
            new Uranium(), new Uranium(), new Uranium(),
            new Ice(), new Ice(), new Ice()
    );

    public void StartGame() {
        System.out.println("Game.StartGame()");

        sun = Sun.getInstance();
        Asteroid a1 = new Asteroid(0, 1);
        Asteroid a2 = new Asteroid(1, 1);
        a1.AddNeighbor(a2);
        Player player = new Player();


        System.out.println("return from Game.StartGame()");
    }

    public void PlayerDie(Player player) {
        ObjectHolder oh = ObjectHolder.getInstance();
        String objectName = oh.get(this);
        System.out.println(objectName+".PlayerDie()");

        System.out.print("Is the playercount greater than 1? (Y|N) ");
        Scanner scanner = new Scanner(System.in);
        String input = scanner.next();

        if (!input.equalsIgnoreCase("Y")) {
            EndGame();
        }

        System.out.println("return from "+objectName+".PlayerDie()");
    }

    public void AddPlayer(Player player) {
        System.out.println("Game.AddPlayer()");
        if (!players.contains(player))
            players.add(player);
        System.out.println("return from Game.AddPlayer()");
    }

    public void EndGame() {
        ObjectHolder oh = ObjectHolder.getInstance();
        String objectName = oh.get(this);
        System.out.println(objectName+".EndGame()");
        System.out.println("return from "+objectName+".EndGame()");
    }

    public void CheckForVictory(List<Resource> resources) {
        ObjectHolder oh = ObjectHolder.getInstance();
        String objectName = oh.get(this);
        System.out.println(objectName+".CheckForVictory()");
        baseBluebrint.IsCraftable(resources);
        System.out.println("return from "+objectName+".CheckForVictory()");
    }

    public static Game getInstance() {
        if (singleClassInstance == null)
            singleClassInstance = new Game();


        ObjectHolder oh = ObjectHolder.getInstance();
        oh.add(baseBluebrint, "baseBlueprint");

        return singleClassInstance;
    }
}
