package szoftprojlab;
//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : Untitled
//  @ File Name : Sun.java
//  @ Date : 10/03/2021
//  @ Author : 
//
//


import java.util.ArrayList;
import java.util.List;
import java.util.Random;

public class Sun implements Steppable {
	private static Sun singleClassIntance = null;

	private int counter;
	private int cycle;
	private double sunStormProbability;
	private int nextSunStormIn;
	private List<Asteroid> asteroids = new ArrayList<>();
	private boolean enabled;

	/**
	 * Initialize the sun
	 * @param nearSunCycle
	 * @param _sunStormProbability
	 */
	public void Init(int nearSunCycle, double _sunStormProbability) {
		cycle = nearSunCycle;
		counter = cycle;
		sunStormProbability = _sunStormProbability;
		nextSunStormIn = (int) (1 / sunStormProbability);
	}

	public int GetNextSunStormArrivalTime() {
		return nextSunStormIn;
	}

	/**
	 * Clear the asteroids
	 * Only needed for the skeleton
	 */
	public void ClearAsteroids() {
		asteroids.clear();
	}

	/**
	 * Steps the sun
	 * Calls ChangeNearSun if it is the time for it
	 * Calls sunstorm if it is time for it
	 */
	public void Step() {
		counter--;
		nextSunStormIn--;

		if (counter == 0) {
			ChangeNearSun();
			counter = cycle;
		}

		if (nextSunStormIn == 0) {
			SunStorm();
			nextSunStormIn = (int) (1 / sunStormProbability);
		}
	}

	/**
	 * Sends a sunstorm to the asteroids
	 * Calls SunStorm on every asteroid
	 */
	private void SunStormOld() {
		asteroids.forEach(Asteroid::SunStorm);
	}

	/**
	 * Sends a sunstorm to the asteroids
	 * Calls SunStorm on every asteroid
	 */
	private void SunStorm() {
		System.out.println("SunStorm hit the field");
		Random rnd = new Random();
		int randomIndex = rnd.ints(0, asteroids.size())
				.findFirst()
				.getAsInt();

		asteroids.get(randomIndex).SendSunStorm(2);
	}

	/**
	 * Changes the near sun state
	 */
	private void ChangeNearSun() {
		System.out.println("Change near sun happening");
		asteroids.forEach(Asteroid::ChangeNearSun);
	}

	/**
	 * Adds a new asteroid to the field
	 * @param asteroid - the asteroid that joins the field
	 */
	public void AddAsteroid(Asteroid asteroid) {
		if (!asteroids.contains(asteroid))
			asteroids.add(asteroid);
	}

	public static Sun getInstance() {
		if (singleClassIntance == null) {
			singleClassIntance = new Sun();
		}

		return singleClassIntance;
	}
}
